---
export interface Props {
	doc: {
		post: { image: string; header: string; content: string; private: boolean };
		image: string;
		updated: number;
	};
	i: number;
}

const { doc, i } = Astro.props;
const id: string = `cardid${i}`;
const updated = new Date(doc.updated).toLocaleDateString("en-GB", {
	weekday: "long",
	year: "numeric",
	month: "long",
	day: "numeric",
});
---

<b-article class='flex flex-col w-full justify-start items-center'>
	<button
		class='group hover:no-underline focus:no-underline dark:dark:bg-zinc-900 w-full sm:max-w-sm'
	>
		<img
			role='presentation'
			class='object-cover w-full dark:dark:bg-gray-500 h-44'
			src={doc.image}
		/>
		<div class='p-6 space-y-2'>
			<h3
				class='text-2xl font-bold group-hover:underline group-focus:underline text-ellipsis overflow-hidden truncate'
			>
				{doc.post.header}
			</h3>
			<article class='h-60 overflow-hidden'>
				<span class='text-xs dark:dark:text-gray-400'>{updated}</span>
				<div set:html={doc.post.content} />
			</article>
		</div>
	</button>
</b-article>

<script>
	class BlockArticle extends HTMLElement {
		constructor() {
			super();

			const expandButton = this.querySelector("button");
			const article = this.querySelector("article");
			const cards = document.querySelectorAll("b-article");
			//console.log(cards);

			expandButton.addEventListener("click", () => {
				cards.forEach((c) => {
					c.classList.toggle("hidden");
				});
				this.classList.toggle("lg:col-span-3");
				this.classList.toggle("sm:col-span-3");
				this.classList.toggle("hidden");
				expandButton.classList.toggle("sm:max-w-sm");
				article.classList.toggle("overflow-hidden");
				article.classList.toggle("h-full");
			});
		}
	}
	customElements.define("b-article", BlockArticle);
</script>
