---
export interface Props {
	doc: {
		post: { image: string; header: string; content: string; private: boolean };
		image: string;
		updated: number;
	};
	i: number;
}

const { doc, i } = Astro.props;
const updated = new Date(doc.updated).toLocaleDateString("en-GB", {
	weekday: "long",
	year: "numeric",
	month: "long",
	day: "numeric",
});
---

<b-article class='flex flex-col w-full justify-start items-center sm:max-w-sm'>
	<div
		class='group hover:no-underline focus:no-underline dark:dark:bg-zinc-900 w-full'
	>
		<img
			role='presentation'
			class='object-cover w-full dark:dark:bg-gray-500 h-44'
			src={doc.image}
		/>
		<div class='p-6 space-y-2'>
			<button class='flex flex-row w-full items-center justify-center'>
				<svg
					xmlns='http://www.w3.org/2000/svg'
					fill='none'
					viewBox='0 0 24 24'
					stroke-width='1.5'
					stroke='currentColor'
					class='w-4 h-4 mr-2 hidden'
				>
					<path
						stroke-linecap='round'
						stroke-linejoin='round'
						d='M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3'></path>
				</svg>

				<span
					class='text-2xl font-bold group-hover:underline group-focus:underline text-ellipsis overflow-hidden truncate'
				>
					{doc.post.header}
				</span>
			</button>
			<article class='h-60 overflow-hidden'>
				<span class='text-xs dark:text-gray-400'>{updated}</span>
				<div
					set:html={doc.post.content}
					class='first-letter:text-7xl first-letter:font-bold dark:first-letter:text-white first-letter:mr-3 first-letter:float-left md:text-left [&_p]:mt-4 md:[&_p]:mt-8 [&_blockquote]:pl-2 [&_blockquote]:text-gray-700 dark:[&_blockquote]:text-gray-100 [&_blockquote]:uppercase [&_blockquote]:tracking-widest [&_blockquote]:text-center'
				/>
			</article>
		</div>
	</div>
</b-article>

<script>
	class BlockArticle extends HTMLElement {
		constructor() {
			super();

			const expandButton = this.querySelector("button");
			const expandButtonIcon = expandButton.querySelector("svg");
			const article = this.querySelector("article");
			const cards = document.querySelectorAll("b-article");
			//console.log(cards);

			expandButton.addEventListener("click", () => {
				cards.forEach((c) => {
					c.classList.toggle("hidden");
				});
				this.classList.toggle("lg:col-span-3");
				this.classList.toggle("sm:col-span-3");
				this.classList.toggle("hidden");
				expandButtonIcon.classList.toggle("hidden");
				this.classList.toggle("sm:max-w-sm");
				article.classList.toggle("overflow-hidden");
				article.classList.toggle("h-full");
			});
		}
	}
	customElements.define("b-article", BlockArticle);
</script>
